<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="PATH" value="/opt/admin/" />

    <!-- 控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
            <charset>utf8</charset> <!-- 输出编码 -->
        </encoder> 
    </appender>

    <!--INFO级别 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${PATH}/info.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天生成一个日志文件，保存30天的日志文件
            - 如果隔一段时间没有输出日志，前面过期的日志不会被删除，只有再重新打印日志的时候，会触发删除过期日志的操作。
            -->
            <fileNamePattern>${PATH}/info/info-%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
            <!--<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
            <!--<maxFileSize>10MB</maxFileSize>-->
            <!--</TimeBasedFileNamingAndTriggeringPolicy>-->
        </rollingPolicy>
        <!-- ThresholdFilter:临界值过滤器，过滤掉 TRACE 和 DEBUG 级别的日志 -->
        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>-->
        <!-- 文件记录格式 -->
        <encoder>
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg %n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- hibernate日志配置 -->
    <logger name="org.springframework" level="INFO" />
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="INFO"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="INFO"/>
    <logger name="org.hibernate.SQL" level="INFO"/>
    <logger name="org.hibernate.engine.QueryParameters" level="INFO"/>
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO"/>
    </root>
</configuration>